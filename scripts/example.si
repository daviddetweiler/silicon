fn: :
	( -- )

	fn:
end-fn

\ The use of `assemble:` here is required, since `end-fn` was tagged `immediate` and would be immediately executed if
\ directly referenced, instead of being assembled in, as intended.
fn: ;
	( -- )

	assemble: end-fn
end-fn immediate

: v?
	( condition -- )

	if
		version
	end-if
;

fn: test
	( -- )

	10
	while
		copy 0 >=
	do
		copy print-# nl
		copy 2 % 0= v?
		1 -
	end-while
	drop
end-fn

fn: recursion-test
	( depth -- )

	copy 0~=
	if
		copy print-# nl
		1 - recurse
	else
		drop
	end-if
end-fn

test
10 recursion-test

s" Hello, world!" print-line
